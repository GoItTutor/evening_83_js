/*
  1. –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó

  - –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∞ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è

  –ù–∞–ø–∏—à—ñ—Ç—å —Ç–∞–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:

  handleProduct(productData, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –∞ 
  —Ç–∞–∫–æ–∂ –∫–æ–ª–ª–±–µ–∫. –§—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É 
  –æ–±'—î–∫—Ç 

  logProduct(product) - –∫–æ–ª–ª–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É —ñ –ª–æ–≥—É—î 
  –π–æ–≥–æ —É –∫–æ–Ω—Å–æ–ª—å

  logTotalPrice(product) - –∫–æ–ª–ª–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É —ñ 
  –ª–æ–≥—É—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å

  –û–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –º–∞—î –ø–æ–ª—è name, quantity —Ç–∞ price

  - –ü–æ–∫–∞–∑–∞—Ç–∏ –≤ —è–∫–æ–º—É –ø–æ—Ä—è–¥–∫—É –≤–∏–∫–ª–∏–∫–∞—é—Ç—å—Å—è —Ñ—É–Ω–∫—Ü—ñ—ó
*/

// function handleProduct(productData, callback) {}

// function logProduct(product) {}

// function logTotalPrice(product) {}

// handleProduct(
//   {
//     name: 'üçé',
//     price: 30,
//     quantity: 3,
//   },
//   logProduct
// );

// handleProduct(
//   {
//     name: 'üçã',
//     price: 20,
//     quantity: 5,
//   },
//   logTotalPrice
// );

/* 
  2. –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó

  –î–æ–¥–∞–π—Ç–µ –æ–±'—î–∫—Ç—É account –º–µ—Ç–æ–¥–∏:

  withdraw(amount, onSuccess, onError) —Ç–∞ deposit(amount, onSuccess, onError) 
  –¥–µ –ø–µ—Ä—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ü–µ —Å—É–º–∞ –æ–ø–µ—Ä–∞—Ü—ñ—ó, –∞ –¥—Ä—É–≥–∏–π —ñ —Ç—Ä–µ—Ç—ñ–π - –∫–æ–ª–ª–±–µ–∫–∏,
  —è–∫—ñ –ø—Ä–∏–π–º–∞—é—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞ —É—Å–ø—ñ—Ö –∞–±–æ –ø–æ–º–∏–ª–∫—É

  –ú–µ—Ç–æ–¥ withdraw –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT 
  –∞–±–æ this.balance, –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É –≤–∏–ø–∞–¥–∫—É –≤–∏–∫–ª–∏–∫–∞—î onSuccess —Ç–∞
  –∑–º–µ–Ω—à—É—î –±–∞–ª–∞–Ω—Å –Ω–∞ –ø–µ—Ä–µ–¥–∞–Ω–∏–π amount

  –ú–µ—Ç–æ–¥ deposit –≤–∏–∫–ª–∏–∫–∞—î onError —è–∫—â–æ amount –±—ñ–ª—å—à–µ TRANSACTION_LIMIT 
  –∞–±–æ –º–µ–Ω—å—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î –Ω—É–ª—é, –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É –≤–∏–ø–∞–¥–∫—É –≤–∏–∫–ª–∏–∫–∞—î onSuccess
  —Ç–∞ –∑–±—ñ–ª—å—à—É—î –±–∞–ª–∞–Ω—Å –Ω–∞ –ø–µ—Ä–µ–¥–∞–Ω–∏–π amount
*/

// const TRANSACTION_LIMIT = 1000;

// const account = {
//   firstname: 'Andrii',
//   lastname: 'Shevchuk',
//   balance: 618,
//   withdraw(amount, onSuccess, onError) {},
//   deposit(amount, onSuccess, onError) {},
// };

// function handleSuccess(message) {
//   console.log(`‚úÖ Success! ${message}`);
// }

// function handleError(message) {
//   console.log(`‚ùå Error! ${message}`);
// }

// account.withdraw(400, handleSuccess, handleError);
// account.withdraw(400, handleSuccess, handleError);
// account.withdraw(6000, handleSuccess, handleError);
// account.deposit(1700, handleSuccess, handleError);
// account.withdraw(300, handleSuccess, handleError);
// account.deposit(0, handleSuccess, handleError);
// account.deposit(-600, handleSuccess, handleError);
// account.deposit(600, handleSuccess, handleError);

/*
  3. –ö–æ–ª–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó

  –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é each(array, callback), —è–∫–∞ –ø–µ—Ä—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ—á—ñ–∫—É—î –º–∞—Å–∏–≤
  —á–∏—Å–µ–ª, –∞ –¥—Ä—É–≥–∏–º - –∫–æ–ª–ª–±–µ–∫, —è–∫–∏–π –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É

  –§—É–Ω–∫—Ü—ñ—è each –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ —è–∫–æ–≥–æ –±—É–¥—É—Ç—å 
  —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏–∫–ª–∏–∫—É –∫–æ–ª–ª–±–µ–∫—É
*/

// function each(array, callback) {}

// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return value * 2;
//   })
// );

// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return value - 10;
//   })
// );

// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return Math.sqrt(value);
//   })
// );

// console.log(
//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
//     return Math.ceil(value);
//   })
// );

// console.log(
//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
//     return Math.floor(value);
//   })
// );

/*
  4. –°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó

  - –î–ª—è —á–æ–≥–æ –±—É–ª–∏ –≤–∏–≥–∞–¥–∞–Ω—ñ
  - –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
  - –Ø–≤–Ω–µ/–Ω–µ—è–≤–Ω–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è
  - –†—ñ–∑–Ω–∏—Ü—è –∑ function declaration (–≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å arguments —Ç–∞ —Å–ø–ª–∏—Ç—Ç—è)

  –ü–µ—Ä–µ–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é getSum, —Å–ª—ñ–¥—É—é—á–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É —Å—Ç—Ä—ñ–ª–æ—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
*/

// function getSum(firstNumber, secondNumber) {
//   return firstNumber + secondNumber;
// }

/*
  5. –°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
  
  –ü–µ—Ä–µ–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó, —Å–ª—ñ–¥—É—é—á–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É —Å—Ç—Ä—ñ–ª–æ—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
*/

// function handleProduct(productData, callback) {
//   callback(product);
// }

// function logProduct(product) {
//   console.log(product);
// }

// function logTotalPrice({ price, quantity }) {
//   console.log(price * quantity);
// }

// handleProduct(
//   {
//     name: 'üçé',
//     price: 30,
//     quantity: 3,
//   },
//   logProduct
// );

// handleProduct(
//   {
//     name: 'üçã',
//     price: 20,
//     quantity: 5,
//   },
//   logTotalPrice
// );

/*
  6. –°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
  
  –ü–µ—Ä–µ–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—ó, —Å–ª—ñ–¥—É—é—á–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—É —Å—Ç—Ä—ñ–ª–æ—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π
*/

// function each(array, callback) {
//   const newArr = [];

//   for (const el of array) {
//     newArr.push(callback(el));
//   }

//   return newArr;
// }

// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return value * 2;
//   })
// );

// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return value - 10;
//   })
// );

// console.log(
//   each([64, 49, 36, 25, 16], function (value) {
//     return Math.sqrt(value);
//   })
// );

// console.log(
//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
//     return Math.ceil(value);
//   })
// );

// console.log(
//   each([1.5, 2.1, 16.4, 9.7, 11.3], function (value) {
//     return Math.floor(value);
//   })
// );

/*
  7. –ú–µ—Ç–æ–¥ forEach

  - –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è
  - –°–∏–≥–Ω–∞—Ç—É—Ä–∞
  
  –ü–µ—Ä–µ–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
*/

// function logItems(items) {
//   for (let index = 0; index < items.length; index += 1) {
//     console.log(`${index + 1} - ${items[index]}`);
//   }
// }

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

/*
  8. –ú–µ—Ç–æ–¥ forEach
  
  –ü–µ—Ä–µ–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
*/

// function printContactsInfo({ names, phones }) {
//   const namesArray = names.split(',');
//   const phonesArray = phones.split(',');

//   for (let i = 0; i < namesArray.length; i += 1) {
//     console.log(`${namesArray[i]}: ${phonesArray[i]}`);
//   }
// }

// printContactsInfo({
//   names: 'Jacob,William,Solomon,Artem',
//   phones: '89001234567,89001112233,890055566377, 890055558379',
// });

/*
  9. –ú–µ—Ç–æ–¥ forEach

  –ü–µ—Ä–µ–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ—Ç–æ–¥ forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
*/

// function calculateAverage(...args) {
//   let total = 0;

//   for (let number of args) {
//     total += number;
//   }

//   return total / args.length;
// }

// console.log(calculateAverage(1, 2, 3, 4)); // 2.5
// console.log(calculateAverage(14, 8, 2)); // 8
// console.log(calculateAverage(27, 43, 2, 8, 36)); // 23.2
